image: "registry.stensuldev.net/dockerfiles/stensul/ci:2.3.0"
services:
  - mongo:latest
variables:
  APP_NAME: "Base"
  APP_BASE_URL: "http://localhost:3000"
  DB_HOST: mongo
  DB_DATABASE: base
  REDIS_HOST: base_queue_1
  CDN_HOST: http://stensul-devel-01.akamaized.net

cache:
  paths:
    - vendor/
    - node_modules/
    - public/
    - ci/vendor/
    - composer.phar
    - security-checker.phar

stages:
  - build
  - test
  - deploy

.npm_install: &npm_install
  before_script:
    - npm install

test_composer_vulnerabilities:
  stage: test
  script:
    - curl -sfLo security-checker.phar http://get.sensiolabs.org/security-checker.phar
    - php security-checker.phar security:check composer.lock

phpunit:
  stage: test
  script:
    - php composer.phar install
    - vendor/bin/phpunit --coverage-html ci/storage/tmp/be_coverage/ --colors=never
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_phpunit_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/be_coverage/

phplint:
  stage: test
  script:
    - cd ci/; php ../composer.phar install; cd ..
    - ci/vendor/bin/parallel-lint --no-colors --blame . --exclude vendor --exclude node_modules
      --exclude storage --exclude tmp --exclude ci > ci/storage/tmp/phplint.txt
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_phplint_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/phplint.txt

jsunit:
  stage: test
  <<: *npm_install
  script:
    - npm run cover
    - npm run metricOfCover -- -p ${CI_PROJECT_NAME} -b ${CI_COMMIT_REF_NAME} -u ${GITLAB_USER_EMAIL} -e "{\"mongoDns\":\" \",\"mongoPort\":\" \",\"mongoUser\":\" \",\"mongoSsl\":false,\"mongoPass\":\" \",\"mongoShortConfig\":\"mongodb+srv://coverage_user:Az5zFQ59zASUe38@qa-ujgr6.gcp.mongodb.net/test\"}"
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_testjs_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/coverage
