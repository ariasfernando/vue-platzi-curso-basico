image: "registry.stensuldev.net/dockerfiles/web-2.0.0:2.2.1"

services:
  - mongo:latest

variables:
  APP_NAME: "Base"
  APP_BASE_URL: "http://localhost:3000"
  DB_HOST: mongo
  DB_DATABASE: base
  REDIS_HOST: base_queue_1
  CDN_HOST: http://stensul-devel-01.akamaized.net

cache:
  paths:
    - vendor/
    - node_modules/
    - public/
    - ci/vendor/
    - composer.phar
    - security-checker.phar

stages:
  - build
  - test
  - deploy

.composer_install: &composer_install
  before_script:
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"

.npm_install: &npm_install
  before_script:
    - yum install -y gcc-c++ cairo cairo-devel
    - npm install

test_composer_vulnerabilities:
  stage: test
  <<: *composer_install
  script:
    - php composer.phar install
    - wget http://get.sensiolabs.org/security-checker.phar
    - php security-checker.phar security:check composer.lock

phpunit:
  stage: test
  <<: *composer_install
  script:
    - php composer.phar install
    # Enable xdebug for code coverage
    - yum install php72-php-pecl-xdebug.x86_64 -y
    - ln -s /opt/remi/php72/root/usr/lib64/php/modules/xdebug.so /usr/lib64/php/modules/xdebug.so
    - cp /etc/opt/remi/php72/php.d/15-xdebug.ini /etc/php.d/
    # Run phpunit with code coverage report enbled.
    - vendor/bin/phpunit --coverage-html ci/storage/tmp/be_coverage/ --colors=never
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_phpunit_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/be_coverage/

phplint:
  stage: test
  <<: *composer_install
  script:
    # Run php parallel lint
    - cd ci/; php ../composer.phar install; cd ..
    - ci/vendor/bin/parallel-lint --no-colors --blame . --exclude vendor --exclude node_modules
      --exclude storage --exclude tmp --exclude ci > ci/storage/tmp/phplint.txt
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_phplint_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/phplint.txt

jsunit:
  stage: test
  <<: *npm_install
  script:
    - npm run cover
    - npm run metricOfCover -- -p ${CI_PROJECT_NAME} -b ${CI_COMMIT_REF_NAME} -u ${GITLAB_USER_EMAIL} -e "{\"mongoDns\":\" \",\"mongoPort\":\" \",\"mongoUser\":\" \",\"mongoSsl\":false,\"mongoPass\":\" \",\"mongoShortConfig\":\"mongodb+srv://coverage_user:Az5zFQ59zASUe38@clusterqa-ujgr6.azure.mongodb.net/test?retryWrites=true\"}"
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_testjs_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/coverage
