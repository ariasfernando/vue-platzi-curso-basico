image: "registry.stensuldev.net/dockerfiles/web-2.0.0:2.2.0"

services:
  - mongo:latest

variables:
  APP_NAME: "Base"
  APP_BASE_URL: "http://localhost:3000"
  DB_HOST: mongo
  DB_DATABASE: base
  REDIS_HOST: base_queue_1

cache:
  paths:
    - vendor/
    - node_modules/
    - public/
    - ci/vendor/
    - composer.phar
    - security-checker.phar

stages:
  - build
  - test
  - deploy

before_script:
  # js related
  - yum install -y gcc-c++ cairo cairo-devel
  - npm install
  # Install composer dependencies
  - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
  - php composer.phar install
  - php artisan vendor:publish --all
  - npm run production
  # Install CI components.
  - cd ci/; php ../composer.phar install; cd ..

phplint:
  stage: test
  script:
    # Run php parallel lint
    - ci/vendor/bin/parallel-lint --no-colors --blame . --exclude vendor --exclude node_modules
      --exclude storage --exclude tmp --exclude ci > ci/storage/tmp/phplint.txt
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_phplint_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - ci/storage/tmp/phplint.txt

jsunit:
  stage: test
  script:
    - npm run test:single
  artifacts:
    when: always
    name: "${CI_JOB_STAGE}_testjs_${CI_COMMIT_REF_NAME}"
    expire_in: 30 days
    paths:
      - coverage/